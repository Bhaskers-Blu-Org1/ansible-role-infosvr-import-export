---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: openigc_bundles - transfer file
  copy:
    src: "{{ outer_item.from }}"
    dest: /tmp/__load_openigc_bundle_{{ outer_item.from | basename }}

- name: openigc_bundles - check for existing bundles
  shell: >
          curl
          -X GET "https://{{ ibm_infosvr_impexp_services_host }}:{{ ibm_infosvr_impexp_services_console_port }}/ibm/iis/igc-rest/v1/bundles/"
          -u {{ ibm_infosvr_impexp_infosvr_admin_user }}:{{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}
          {% if __ibm_infosvr_impexp_ssl_cert_location is defined %}--cacert {{ __ibm_infosvr_impexp_ssl_cert_location }}{% endif %}
          -f
  args:
    warn: False
  register: ibm_infosvr_impexp_openigc_existing_bundles

- name: openigc_bundles - extract bundle to temporary location
  unarchive:
    src: /tmp/__load_openigc_bundle_{{ outer_item.from | basename }}
    dest: /tmp/__load_openigc_bundle_{{ outer_item.from | basename }}_tmp
    remote_src: yes

- name: openigc_bundles - get bundle ID
  xml:
    path: /tmp/__load_openigc_bundle_{{ outer_item.from | basename }}_tmp/asset_type_descriptor.xml
    xpath: /x:descriptor
    namespaces:
      x: http://www.ibm.com/iis/igc/asset-type-descriptor
    content: attribute
  register: __ibm_infosvr_impexp_bundle_xml

- name: openigc_bundles - create bundles that are not registered
  shell: >
          curl
          -X POST "https://{{ ibm_infosvr_impexp_services_host }}:{{ ibm_infosvr_impexp_services_console_port }}/ibm/iis/igc-rest/v1/bundles/"
          -u {{ ibm_infosvr_impexp_infosvr_admin_user }}:{{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}
          {% if __ibm_infosvr_impexp_ssl_cert_location is defined %}--cacert {{ __ibm_infosvr_impexp_ssl_cert_location }}{% endif %}
          -f -F file=@/tmp/__load_openigc_bundle_{{ outer_item.from | basename }}
  args:
    warn: False
  when: not __ibm_infosvr_impexp_bundle_xml.matches[0]["{http://www.ibm.com/iis/igc/asset-type-descriptor}descriptor"].bundleId in (ibm_infosvr_impexp_openigc_existing_bundles.stdout | to_json)

- name: update OpenIGC bundles that are already registered
  shell: >
          curl
          -X PUT "https://{{ ibm_infosvr_impexp_services_host }}:{{ ibm_infosvr_impexp_services_console_port }}/ibm/iis/igc-rest/v1/bundles/"
          -u {{ ibm_infosvr_impexp_infosvr_admin_user }}:{{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}
          {% if __ibm_infosvr_impexp_ssl_cert_location is defined %}--cacert {{ __ibm_infosvr_impexp_ssl_cert_location }}{% endif %}
          -f -F file=@/tmp/__load_openigc_bundle_{{ outer_item.from | basename }}
  args:
    warn: False
  when: __ibm_infosvr_impexp_bundle_xml.matches[0]["{http://www.ibm.com/iis/igc/asset-type-descriptor}descriptor"].bundleId in (ibm_infosvr_impexp_openigc_existing_bundles.stdout | to_json)

- name: openigc_bundles - cleanup transferred files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /tmp/__load_openigc_bundle_{{ outer_item.from | basename }}
    - /tmp/__load_openigc_bundle_{{ outer_item.from | basename }}_tmp
