---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: setup default conditions
  set_fact:
    __ibm_infosvr_impexp_default_conditions: >
          {%- if __ibm_infosvr_impexp_type == 'infoanalyzer' -%}
          [{'property': 'project', 'operator': '=', 'value': '{{ outer_item.from_project }}' }]
          {%- elif __ibm_infosvr_impexp_type == 'datastage' -%}
          [{'property': 'transformation_project.name', 'operator': '=', 'value': '{{ outer_item.from_project }}' }]
          {%- else -%}
          []
          {%- endif -%}

- debug:
    var: __ibm_infosvr_impexp_default_conditions
    verbosity: 1

- name: get changed assets
  igc_get_changed_assets:
    host: "{{ ibm_infosvr_impexp_services_host }}"
    port: "{{ ibm_infosvr_impexp_services_console_port }}"
    user: "{{ ibm_infosvr_impexp_infosvr_admin_user }}"
    password: "{{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}"
    asset_type: "{{ item.type }}"
    from_time: >
              {% if item.changes_in_last_hours is defined %}
              {{ (__ibm_infosvr_impexp_to_epoch | int) - ((item.changes_in_last_hours | int) * 3600 * 1000) }}
              {% else %}
              -1
              {% endif %}
    to_time: >
              {{ __ibm_infosvr_impexp_to_epoch | int }}
    conditions: "{{ item.only_with_conditions | default([]) | union(__ibm_infosvr_impexp_default_conditions) }}"
    cert: "{{ __ibm_infosvr_impexp_ssl_cert_location | default(omit) }}"
  register: __ibm_infosvr_impexp_changes
  with_items: "{{ outer_item.including_objects }}"
  loop_control:
    label: "{{ outer_item.into | basename }} - {{ item.type }}"

- name: consolidate list of assets
  set_fact:
    __ibm_infosvr_impexp_assets: "{{ __ibm_infosvr_impexp_changes | json_query('results[*].assets | []') }}"

- name: export {{ __ibm_infosvr_impexp_type }} assets
  include_tasks: per_{{ __ibm_infosvr_impexp_type }}.yml
