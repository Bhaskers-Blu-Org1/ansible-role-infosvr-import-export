---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: query for existing metadata
  shell: >
          source ~/.bashrc &&
          source dsenv &&
          {{ ibm_infosvr_impexp_infosvr_install_location }}/Clients/istools/cli/istool.sh
          query
          -u {{ ibm_infosvr_impexp_infosvr_admin_user }}
          -p {{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}
          -dom {{ ibm_infosvr_impexp_services_host }}:{{ ibm_infosvr_impexp_services_console_port }}
          -of /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_query
          {{ __ibm_infosvr_impexp_switch }} '{{ item.with_path }}'
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSEngine"
  register: __ibm_infosvr_impexp_cm_query
  failed_when: >
                __ibm_infosvr_impexp_cm_query.rc != 0
                and ("An asset was not found for identity string" not in __ibm_infosvr_impexp_cm_query.stderr)
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  changed_when: False
  loop_control:
    label: "{{ item.into | basename }}"

- name: export metadata
  shell: >
          source ~/.bashrc &&
          source dsenv &&
          {{ ibm_infosvr_impexp_infosvr_install_location }}/Clients/istools/cli/istool.sh
          export
          -u {{ ibm_infosvr_impexp_infosvr_admin_user }}
          -p {{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}
          -dom {{ ibm_infosvr_impexp_services_host | lower }}:{{ ibm_infosvr_impexp_services_console_port }}
          -ar /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.item.into | basename }}
          -up
          {{ __ibm_infosvr_impexp_switch }} '{{ item.item.with_path }}'
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSEngine"
  when: item.rc == 0
  with_items: "{{ __ibm_infosvr_impexp_cm_query.results }}"
  ignore_errors: True
  loop_control:
    label: "{{ item.item.into | basename }}"

- name: transfer files
  fetch:
    src: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.item.into | basename }}
    dest: "{{ item.item.into }}"
    flat: yes
  when: item.rc == 0
  with_items: "{{ __ibm_infosvr_impexp_cm_query.results }}"
  loop_control:
    label: "{{ item.item.into | basename }}"

- name: cleanup exported files
  file: path=/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.item.into | basename }} state=absent
  when: item.rc == 0
  with_items: "{{ __ibm_infosvr_impexp_cm_query.results }}"
  loop_control:
    label: "{{ item.item.into | basename }}"

- name: cleanup query file
  file: path=/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_query state=absent
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"
