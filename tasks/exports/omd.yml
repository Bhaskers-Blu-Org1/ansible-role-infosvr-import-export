---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: ensure XML backup dir exists
  file:
    path: "{{ ibm_infosvr_impexp_omd_backup_dir }}"
    state: directory
    owner: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
    group: "{{ ibm_infosvr_impexp_infosvr_dsadm_group }}"
    mode: 0775
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"

- name: check if backup is enabled
  lineinfile:
    path: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSOMD/omdmonapp.config"
    regexp: "^OMDFlowBackupEnabled"
    line: "OMDFlowBackupEnabled=1"
    state: present
  check_mode: yes
  register: __ibm_infosvr_impexp_omd_enabled
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"

- name: shutdown OMDMonApp (if needed)
  shell: "source `cat /.dshome`/dsenv && ./bin/DSOMDMonApp.sh -stop"
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSOMD"
  ignore_errors: yes
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  when: (__ibm_infosvr_impexp_omd_enabled | changed) or (__ibm_infosvr_impexp_omd_enabled | failed)

- name: enable enriched OMD backup
  lineinfile:
    path: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSOMD/omdmonapp.config"
    regexp: "^OMDFlowBackupEnabled"
    line: "OMDFlowBackupEnabled=1"
    state: present
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  when: (__ibm_infosvr_impexp_omd_enabled | changed) or (__ibm_infosvr_impexp_omd_enabled | failed)

- name: set backup directory for enriched OMD files
  lineinfile:
    path: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSOMD/omdmonapp.config"
    regexp: "^OMDFlowBackupDir"
    line: "OMDFlowBackupDir={{ ibm_infosvr_impexp_omd_backup_dir }}"
    state: present
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  when: (__ibm_infosvr_impexp_omd_enabled | changed) or (__ibm_infosvr_impexp_omd_enabled | failed)

- name: startup OMDMonApp (if needed)
  shell: "source `cat /.dshome`/dsenv && ./bin/DSOMDMonApp.sh -start"
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSOMD"
  ignore_errors: yes
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  when: (__ibm_infosvr_impexp_omd_enabled | changed) or (__ibm_infosvr_impexp_omd_enabled | failed)

- name: get flows by criteria
  omd_get_changes:
    dir: "{{ ibm_infosvr_impexp_omd_backup_dir }}"
    from_time: >
              {% if item.limited_to is defined and item.limited_to.changes_in_last_hours is defined %}
              {{ (__ibm_infosvr_impexp_to_epoch|int) - ((item.limited_to.changes_in_last_hours|int) * 3600 * 1000) }}
              {% else %}
              -1
              {% endif %}
    to_time: >
              {{ __ibm_infosvr_impexp_to_epoch | int }}
  register: __ibm_infosvr_impexp_omd_extract
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"

- name: transfer files
  fetch:
    src: "{{ ibm_infosvr_impexp_omd_backup_dir }}/{{ item.1 }}"
    dest: "{{ item.0.item.into }}/{{ item.1 }}"
    flat: yes
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  with_subelements:
    - "{{ __ibm_infosvr_impexp_omd_extract.results }}"
    - "flow_files"
  loop_control:
    label: "{{ item.0.item.into }}/{{ item.1 }}"

- name: remove exported files
  file: path="{{ ibm_infosvr_impexp_omd_backup_dir }}/{{ item.1 }}" state=absent
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  with_subelements:
    - "{{ __ibm_infosvr_impexp_omd_extract.results }}"
    - "flow_files"
  when: >
          item.0.item.with_options is defined
          and item.0.item.with_options.remove_once_exported is defined
          and item.0.item.with_options.remove_once_exported
  loop_control:
    label: "{{ item.0.item.into }}/{{ item.1 }}"
