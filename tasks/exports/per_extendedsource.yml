---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: export assets
  shell: >
          source ~/.bashrc &&
          . dsenv &&
          {{ ibm_infosvr_impexp_infosvr_install_location }}/Clients/istools/cli/istool.sh
          workbench extension source export
          -u {{ ibm_infosvr_impexp_infosvr_admin_user }}
          -p {{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}
          -dom {{ ibm_infosvr_impexp_services_host | lower }}:{{ ibm_infosvr_impexp_services_console_port }}
          -pt '{{ item.name }}'
          -dir /tmp
          -f __export_{{ __ibm_infosvr_impexp_type }}_{{ outer_item.into | basename }}
          -ap
          -t {{ item.type }}
          -o /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ outer_item.into | basename }}.log
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSEngine"
  with_items: "{{ __ibm_infosvr_impexp_assets }}"
  loop_control:
    label: "{{ outer_item.into | basename }} - {{ item.name }}"

# TODO: above should be capable of multiple files per entry (ie. multiple 'types')...
# ... so should we bundle these into a .zip as we do for extension mapping documents?
# ... (or does the '-ap' option above mean they're all appended to a single CSV file?)
- name: bundle exported files
  archive:
    dest: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.item.dest | basename }}
    path: >
          {{ item | to_json | from_json | json_query("assets[*].join('',['/tmp/',file])") }}
    format: zip
    remove: yes
  when: item.assets is defined and (item.assets | length) > 0
  with_items: "{{ __ibm_infosvr_impexp_one_type_conditions_changes.results }}"
  loop_control:
    label: "{{ item.item.dest | basename }}"
