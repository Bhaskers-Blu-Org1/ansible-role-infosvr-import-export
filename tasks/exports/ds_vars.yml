---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: export DataStage variables
  shell: >
          source ~/.bashrc &&
          source dsenv &&
          ./bin/dsadmin
          -domain {{ ibm_infosvr_impexp_services_host | lower }}:{{ ibm_infosvr_impexp_services_console_port }}
          -user {{ ibm_infosvr_impexp_infosvr_admin_user }}
          -password {{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}
          -server {{ ibm_infosvr_impexp_engine_host | upper }}
          -listenv {{ item.from_project }} > /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSEngine"
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }} - {{ item.from_project }}"

- name: limit vars in file
  shell: >
          grep '^{{ item.1 }}'
          /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.0.into | basename }}
          >> /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.0.into | basename }}.limited
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  with_subelements:
    - "{{ __ibm_infosvr_impexp_items | selectattr('limited_to', 'defined') | list }}"
    - "limited_to"
  loop_control:
    label: "{{ item.0.into | basename }} - {{ item.1 }}"

- name: rename (limited) files
  copy:
    src: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}.limited
    dest: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}
    remote_src: True
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  when: item.limited_to is defined
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: remove (limited) files
  file: path=/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}.limited state=absent
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  when: item.limited_to is defined
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: transfer files
  fetch:
    src: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}
    dest: "{{ item.into }}.properties"
    flat: yes
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: transfer DSParams
  fetch:
    src: "{{ ibm_infosvr_impexp_projects_dir }}/{{ item.from_project }}/DSParams"
    dest: "{{ item.into }}.dsparams"
    flat: yes
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.from_project | basename }}"

- name: cleanup exported files
  file: path=/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }} state=absent
  become: yes
  become_user: "{{ ibm_infosvr_impexp_infosvr_dsadm_user }}"
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: convert properties to YAML
  local_action:
    module: template
    src: ds_vars.yml.j2
    dest: "{{ item.into }}"
  become: no
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: remove properties file
  local_action:
    module: file
    path: "{{ item.into }}.properties"
    state: absent
  become: no
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: remove DSParams file
  local_action:
    module: file
    path: "{{ item.into }}.dsparams"
    state: absent
  become: no
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"
