---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: export custom attribute definitions
  shell: >
          source ~/.bashrc &&
          source dsenv &&
          {{ ibm_infosvr_impexp_infosvr_install_location }}/Clients/istools/cli/istool.sh
          export
          -u {{ ibm_infosvr_impexp_infosvr_admin_user }}
          -p {{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}
          -dom {{ ibm_infosvr_impexp_services_host | lower }}:{{ ibm_infosvr_impexp_services_console_port }}
          -ar /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_full.zip
          -up
          -customattributes '/{{ item.from_area }}/{{ item.from_type }}/{{ item.from_attr }}.cd'
  args:
    executable: /bin/bash
    chdir: "{{ ibm_infosvr_impexp_infosvr_install_location }}/Server/DSEngine"
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  when: __ibm_infosvr_impexp_items is defined
  loop_control:
    label: "{{ item.into | basename }}"

- name: create temporary unarchive location
  file:
    path: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_tmp
    state: directory
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_tmp"

- name: unarchive ISX file
  unarchive:
    src: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_full.zip
    dest: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_tmp
    remote_src: yes
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: list unarchived XML files
  find:
    path: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_tmp
    patterns: '*.cd'
    recurse: yes
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  register: __ibm_infosvr_impexp_ca_unarchived
  loop_control:
    label: "/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_tmp"

- name: restrict exported custom attributes
  customattr_get_changes:
    src: "{{ item.1.path }}"
    from_time: >
        {% if item.0.item.limited_to is defined and item.0.item.limited_to.changes_in_last_hours is defined %}
        {{ (__ibm_infosvr_impexp_to_epoch|int) - ((item.0.item.limited_to.changes_in_last_hours|int) * 3600 * 1000) }}
        {% else %}
        -1
        {% endif %}
    to_time: >
              {{ __ibm_infosvr_impexp_to_epoch | int }}
    model_ver: "{{ hostvars[groups['ibm-information-server-domain'][0]]['__ibm_infosvr_impexp_model_versions'] \
                | json_query(\"[?model == 'ASCLCustomAttribute'].version | [0]\") }}"
    names: "{% if item.0.item.limited_to is defined %}\
            {{ item.0.item.limited_to.names | default([]) }}\
            {% else %}\
            []\
            {% endif %}"
  register: __ibm_infosvr_impexp_ca_extract
  with_subelements:
    - "{{ __ibm_infosvr_impexp_ca_unarchived.results }}"
    - files
  loop_control:
    label: "{{ item.1.path }}"

- debug:
    var: __ibm_infosvr_impexp_ca_extract
    verbosity: 1

- name: re-archive ISX file
  archive:
    dest: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}.zip
    path: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_tmp/
    format: zip
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: remove temporary unarchive location
  file:
    path: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_tmp
    state: absent
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_tmp"

- name: transfer files
  fetch:
    src: /tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}.zip
    dest: "{{ item.into }}"
    flat: yes
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: cleanup exported files
  file: path=/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}_full.zip state=absent
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"

- name: cleanup restricted files
  file: path=/tmp/__export_{{ __ibm_infosvr_impexp_type }}_{{ item.into | basename }}.zip state=absent
  with_items: "{{ __ibm_infosvr_impexp_items }}"
  loop_control:
    label: "{{ item.into | basename }}"
