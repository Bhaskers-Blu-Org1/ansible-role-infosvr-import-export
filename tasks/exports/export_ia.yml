---
###
# Copyright 2018 IBM Corp. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#      http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
###

- name: export_ia - setup project condition
  set_fact:
    __ibm_infosvr_impexp_ia_project_cond_item:
      - { property: "project", operator: "=", value: "{{ item.project }}" }
  with_items: "{{ ibm_infosvr_impexp_ia_export }}"
  register: __ibm_infosvr_impexp_ia_export
  loop_control:
    label: "{{ item.dest | basename }}"

- name: export_ia - get changed assets
  igc_get_changed_assets:
    host: "{{ ibm_infosvr_impexp_services_host }}"
    port: "{{ ibm_infosvr_impexp_services_console_port }}"
    user: "{{ ibm_infosvr_impexp_infosvr_admin_user }}"
    password: "{{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}"
    asset_type: "{{ item.1.type }}"
    from_time: >
              {% if item.1.changes_in_last_hours is defined %}
              {{ (__ibm_infosvr_impexp_to_epoch | int) - ((item.1.changes_in_last_hours | int) * 3600 * 1000) }}
              {% else %}
              -1
              {% endif %}
    to_time: >
              {{ __ibm_infosvr_impexp_to_epoch | int }}
    conditions: "{{ item.1.conditions | default([]) | union(item.0.ansible_facts.__ibm_infosvr_impexp_ia_project_cond_item) }}"
    cert: "{{ __ibm_infosvr_impexp_ssl_cert_location | default(omit) }}"
  register: __ibm_infosvr_impexp_ia_export_changes
  with_subelements:
    - "{{ __ibm_infosvr_impexp_ia_export.results }}"
    - "item.objects"
  loop_control:
    label: "{{ item.0.item.dest | basename }} - {{ item.1.type }}"

# IA REST API for project-level info will retrieve everything, so we should just do this
# once per project...
- name: export_ia - export Information Analyzer project
  ia_extract_project:
    host: "{{ ibm_infosvr_impexp_services_host | lower }}"
    port: "{{ ibm_infosvr_impexp_services_console_port }}"
    user: "{{ ibm_infosvr_impexp_infosvr_admin_user }}"
    password: "{{ ibm_infosvr_impexp_infosvr_admin_user_pwd }}"
    project: "{{ item.item[0].item.project }}"
    dest: /tmp/__export_ia_{{ item.item[0].item.dest | basename }}
    assets_to_keep: "{{ item.assets }}"
    cert: "{{ __ibm_infosvr_impexp_ssl_cert_location | default(omit) }}"
  register: __ibm_infosvr_impexp_ia_extract
  with_items: "{{ __ibm_infosvr_impexp_ia_export_changes.results }}"
  loop_control:
    label: "{{ item.item[0].item.dest | basename }}"

- name: export_ia - transfer files
  fetch: src=/tmp/__export_ia_{{ item.dest | basename }} dest={{ item.dest }} flat=yes
  with_items: "{{ ibm_infosvr_impexp_ia_export }}"

- name: export_ia - cleanup exported files
  file: path=/tmp/__export_ia_{{ item.dest | basename }} state=absent
  with_items: "{{ ibm_infosvr_impexp_ia_export }}"
